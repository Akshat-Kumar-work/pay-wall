#CD PIPELINE FILE

name: Build and Deploy to Docker Hub

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest   #on ubuntu machine
    steps:
    - name: Check Out Repo     #checkout code base
      uses: actions/checkout@v2

    - name: Log in to Docker Hub    #log into docker hub repo
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}    #with username coming from github secret
        password: ${{ secrets.DOCKER_PASSWORD }}    #with password coming from github secret

    - name: Build and Push Docker image             #build image and pushed the image to docker hub repo
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./docker/Dockerfile.userApp           #docker file path
        push: true
        tags: akshatwork6/user-app-image  # dockerhub username/ repo name where we have to push the image

    - name: Verify Pushed Image            # pull the created image from docker hub repo
      run: docker pull akshatwork6/user-app-image:latest   #command to pull the image
    
    - name: Deploy to EC2                   #after the commit happend and pulled image from the docker hub ,this will deploy it to ec2 machine 
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          sudo docker pull akshatwork6/user-app-image:latest
          sudo docker stop web-app || true
          sudo docker rm web-app || true
          sudo docker run -e JWT_SECRET=${{ secrets.JWT_SECRET }} -e DATABASE_URL=${{ secrets.DB_URL }} -e GOOGLE_SECRET=${{ secrets.GOOGLE_SECRET }} -e GOOGLE_ID=${{ secrets.GOOGLE_ID }} -d --restart unless-stopped -p 3005:3000 akshatwork6/user-app-image
